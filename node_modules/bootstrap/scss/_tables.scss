//
// Basic Bootstrap table
//

.table {
  width: 100%;
<<<<<<< HEAD
  margin-bottom: $spacer;
  background-color: $table-bg; // Reset for nesting within parents with `background-color`.
=======
  max-width: 100%;
  margin-bottom: $spacer;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64

  th,
  td {
    padding: $table-cell-padding;
    vertical-align: top;
    border-top: $table-border-width solid $table-border-color;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: (2 * $table-border-width) solid $table-border-color;
  }

  tbody + tbody {
    border-top: (2 * $table-border-width) solid $table-border-color;
  }

  .table {
    background-color: $body-bg;
  }
}


//
// Condensed table w/ half padding
//

.table-sm {
  th,
  td {
<<<<<<< HEAD
    padding: $table-cell-padding-sm;
=======
    padding: $table-sm-cell-padding;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
  }
}


<<<<<<< HEAD
// Border versions
//
// Add or remove borders all around the table and between all the columns.
=======
// Bordered version
//
// Add borders all around the table and between all the columns.
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64

.table-bordered {
  border: $table-border-width solid $table-border-color;

  th,
  td {
    border: $table-border-width solid $table-border-color;
  }

  thead {
    th,
    td {
<<<<<<< HEAD
      border-bottom-width: 2 * $table-border-width;
=======
      border-bottom-width: (2 * $table-border-width);
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
    }
  }
}

<<<<<<< HEAD
.table-borderless {
  th,
  td,
  thead th,
  tbody + tbody {
    border: 0;
  }
}
=======
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
<<<<<<< HEAD
  tbody tr:nth-of-type(#{$table-striped-order}) {
    background-color: $table-accent-bg;
=======
  tbody tr:nth-of-type(odd) {
    background-color: $table-bg-accent;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
  }
}


// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  tbody tr {
    @include hover {
<<<<<<< HEAD
      background-color: $table-hover-bg;
=======
      background-color: $table-bg-hover;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
    }
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

<<<<<<< HEAD
@each $color, $value in $theme-colors {
  @include table-row-variant($color, theme-color-level($color, $table-bg-level), theme-color-level($color, $table-border-level));
}

@include table-row-variant(active, $table-active-bg);


// Dark styles
//
// Same table markup, but inverted color scheme: dark background and light text.

// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-dark {
    th {
      color: $table-dark-color;
      background-color: $table-dark-bg;
      border-color: $table-dark-border-color;
    }
  }

  .thead-light {
    th {
      color: $table-head-color;
      background-color: $table-head-bg;
      border-color: $table-border-color;
    }
  }
}

.table-dark {
  color: $table-dark-color;
  background-color: $table-dark-bg;
=======
// Generate the contextual variants
@include table-row-variant(active, $table-bg-active);
@include table-row-variant(success, $state-success-bg);
@include table-row-variant(info, $state-info-bg);
@include table-row-variant(warning, $state-warning-bg);
@include table-row-variant(danger, $state-danger-bg);


// Inverse styles
//
// Same table markup, but inverted color scheme: dark background and light text.

.thead-inverse {
  th {
    color: $table-inverse-color;
    background-color: $table-inverse-bg;
  }
}

.thead-default {
  th {
    color: $table-head-color;
    background-color: $table-head-bg;
  }
}

.table-inverse {
  color: $table-inverse-color;
  background-color: $table-inverse-bg;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64

  th,
  td,
  thead th {
<<<<<<< HEAD
    border-color: $table-dark-border-color;
=======
    border-color: $body-bg;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
  }

  &.table-bordered {
    border: 0;
  }
<<<<<<< HEAD

  &.table-striped {
    tbody tr:nth-of-type(odd) {
      background-color: $table-dark-accent-bg;
    }
  }

  &.table-hover {
    tbody tr {
      @include hover {
        background-color: $table-dark-hover-bg;
      }
    }
  }
}


// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar; // See https://github.com/twbs/bootstrap/pull/10057

        // Prevent double border on horizontal scroll due to use of `display: block;`
        > .table-bordered {
          border: 0;
        }
      }
    }
=======
}



// Responsive tables
//
// Add `.table-responsive` to `.table`s and we'll make them mobile friendly by
// enabling horizontal scrolling. Only applies <768px. Everything above that
// will display normally.

.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -ms-overflow-style: -ms-autohiding-scrollbar; // See https://github.com/twbs/bootstrap/pull/10057

  // Prevent double border on horizontal scroll due to use of `display: block;`
  &.table-bordered {
    border: 0;
>>>>>>> c420de61f558fd17b65929726a81d424ce63aa64
  }
}
